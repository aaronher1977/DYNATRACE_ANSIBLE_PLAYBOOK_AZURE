---
- name: Install Dynatrace OneAgent from Ivanti (AAP-ready, environment-aware)
  hosts: all
  become: true
  gather_facts: false

  vars:
    # ----- REQUIRED INPUTS (override in AAP or CLI) -----
    app_name: "unknown"                    # if not known, stays 'unknown'
    env_type: "fidev_east"                 # e.g., fidev_east, fidev_west, prod_west, sit_west, uat_west
    installer_url: "https://ivanti.pi.com/configmgmt/Linux/Agents/Dynatrace/Dynatrace-OneAgent-Linux-1.3.19.76.20250819-104206.sh"

    # ----- Common install parameters -----
    installer_dir: "/opt/dynatrace"
    agent_install_path_guard: "/opt/dynatrace/oneagent"
    validate_certs: false
    monitoring_mode: "fullstack"
    infra_only: "FALSE"
    app_log_content_access: "FALSE"

    # ----- Environment-based mapping -----
    dynatrace_env_map:
      fidev_east:
        network_zone: "nz-fidev-vnext-e1-pxy-azure"
        server_ip: "10.22.8.101"
      fidev_west:
        network_zone: "nz-fidev-vnext-w3-pxy-azure"
        server_ip: "10.14.8.103"
      prod_west:
        network_zone: "nz-prod-vnext-w3-pxy-azure"
        server_ip: "10.8.8.100"
      sit_west:
        network_zone: "nz-sit-vnext-w3-pxy-azure"
        server_ip: "10.10.8.104"
      uat_west:
        network_zone: "nz-uat-vnext-w3-pxy-azure"
        server_ip: "10.12.8.105"

  pre_tasks:
    - name: Verify environment type exists in map
      ansible.builtin.assert:
        that:
          - dynatrace_env_map[env_type] is defined
        fail_msg: "Unknown environment type '{{ env_type }}'. Please set one of: fidev_east, fidev_west, prod_west, sit_west, uat_west."

    - name: Set network zone and server string based on environment
      ansible.builtin.set_fact:
        network_zone: "{{ dynatrace_env_map[env_type].network_zone }}"
        set_server_string: "{{ dynatrace_env_map[env_type].server_ip }}"

    - name: Ensure installer directory exists
      ansible.builtin.file:
        path: "{{ installer_dir }}"
        state: directory
        mode: '0755'

  tasks:
    - name: Download Dynatrace OneAgent installer from Ivanti
      ansible.builtin.get_url:
        url: "{{ installer_url }}"
        dest: "{{ installer_dir }}/{{ installer_url | basename }}"
        mode: '0755'
        force: no
        validate_certs: "{{ validate_certs }}"
        timeout: 60
      register: download_out
      retries: 3
      delay: 5
      until: download_out is succeeded

    - name: Run Dynatrace OneAgent installer (idempotent)
      ansible.builtin.shell: >
        /bin/sh "{{ installer_dir }}/{{ installer_url | basename }}"
        --set-monitoring-mode={{ monitoring_mode }}
        --set-infra-only={{ infra_only }}
        --set-app-log-content-access={{ app_log_content_access }}
        --set-network-zone={{ network_zone }}
        --set-host-group=hg-{{ app_name }}-{{ env_type }}
        {% if set_server_string | length > 0 %} --set-server="{{ set_server_string }}" {% endif %}
      args:
        chdir: "{{ installer_dir }}"
        creates: "{{ agent_install_path_guard }}"
      register: install_out

    - name: Show installer output (first run)
      ansible.builtin.debug:
        var: install_out.stdout_lines
      when: install_out is defined and install_out.stdout is defined

    - name: Enable and start Dynatrace OneAgent service if present
      ansible.builtin.service:
        name: oneagent
        enabled: true
        state: started
      register: svc_out
      failed_when: false

    - name: Note service handling result
      ansible.builtin.debug:
        msg: "Service attempt result: {{ svc_out | default('service not present') }}"
      when: svc_out is defined
